<?php

// Generated by a python script so my intellisense can figure out what to do
// Link to script: https://gist.github.com/OwenVanRijn/461febf6d58596866a9bd42d4c87b4ea
// This is dumb, but i don't see another way to union a return type

$root = realpath($_SERVER["DOCUMENT_ROOT"]);
require_once($root . "/Model/activity.php");
require_once("dynamicQueryGen.php");

class activityDAO extends dynamicQueryGen
{
    public function __construct()
    {
        parent::__construct(activity::class);
    }

    /**
     * @param array $filter
     * @return activity[]|activity|null
     */
    public function get(array $filter = [])
    {
        return parent::get($filter);
    }



    public function findInfoById($id){
        $this->prepareQuery("select * from activity
LEFT JOIN foodactivity on activity.id = foodactivity.activityId
LEFT JOIN danceactivity on activity.id = danceactivity.activityid
LEFT JOIN jazzactivity on activity.id = jazzactivity.activityId
WHERE activity.id = $id");
        $this->stmt->bind_param("i", $id);
        return $this->execQuerySingle();
    }


    public function getActivityInfo($id)
    {
        $this->prepareQuery("select * from activity

LEFT JOIN foodactivity on activity.id = foodactivity.activityId
LEFT JOIN restaurant on foodactivity.restaurantId = restaurant.id
LEFT JOIN restauranttypelink on restaurant.id = restauranttypelink.restaurantid
LEFT JOIN restauranttypes on restauranttypelink.restauranttypesid = restauranttypes.id

LEFT JOIN danceactivity on activity.id = danceactivity.activityid
LEFT JOIN artistsonactivity on danceactivity.id = artistsonactivity.danceactivityid
LEFT JOIN danceartist on artistsonactivity.danceartistid = danceartist.id
LEFT JOIN dancetypelink on danceartist.id = dancetypelink.danceartistid
LEFT JOIN dancetypes on dancetypelink.dancetypeid = dancetypes.id


LEFT JOIN jazzactivity on activity.id = jazzactivity.activityId
LEFT JOIN jazzband on jazzactivity.jazzbandid = jazzband.id

LEFT JOIN location on activity.locationId = location.id

WHERE activity.id = $id");
        return $this->execQueryResult(function (array $sqlRes){
            return $sqlRes;
        });
    }


    public function getActivityInfo2($id)
    {
        return $this->get(["id" => $id]);

        return $this->execQueryResult(function (array $sqlRes){
            return $sqlRes;
        });
    }
}